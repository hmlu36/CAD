// <auto-generated />
using System;
using CAD;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CAD.Migrations
{
    [DbContext(typeof(DefaultContext))]
    partial class DefaultContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dbo")
                .HasAnnotation("ProductVersion", "2.1.2-rtm-30932");

            modelBuilder.Entity("CAD.Models.Setting.Category", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnName("Created_Time");

                    b.Property<string>("CreatedUser")
                        .IsRequired()
                        .HasColumnName("Created_User")
                        .HasMaxLength(10);

                    b.Property<string>("Description")
                        .HasMaxLength(30);

                    b.Property<DateTime>("ModifiedTime")
                        .HasColumnName("Modified_Time");

                    b.Property<string>("ModifiedUser")
                        .IsRequired()
                        .HasColumnName("Modified_User")
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("Dotnet.Models.Identity.Role", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnName("Created_Time");

                    b.Property<string>("CreatedUser")
                        .IsRequired()
                        .HasColumnName("Created_User")
                        .HasMaxLength(10);

                    b.Property<string>("Description")
                        .HasMaxLength(30);

                    b.Property<DateTime>("ModifiedTime")
                        .HasColumnName("Modified_Time");

                    b.Property<string>("ModifiedUser")
                        .IsRequired()
                        .HasColumnName("Modified_User")
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.ToTable("Identity_Role");

                    b.HasData(
                        new { Id = "67db9b4c-ad92-405f-b42b-016712b20dd3", Code = "User", CreatedTime = new DateTime(2018, 8, 28, 17, 12, 26, 373, DateTimeKind.Local), CreatedUser = "DBO", Description = "一般使用者", ModifiedTime = new DateTime(2018, 8, 28, 17, 12, 26, 373, DateTimeKind.Local), ModifiedUser = "DBO" },
                        new { Id = "75f3dca5-609b-4780-8f2c-517e3beff555", Code = "Admin", CreatedTime = new DateTime(2018, 8, 28, 17, 12, 26, 374, DateTimeKind.Local), CreatedUser = "DBO", Description = "系統管理員", ModifiedTime = new DateTime(2018, 8, 28, 17, 12, 26, 374, DateTimeKind.Local), ModifiedUser = "DBO" }
                    );
                });

            modelBuilder.Entity("Dotnet.Models.Identity.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnName("Created_Time");

                    b.Property<string>("CreatedUser")
                        .IsRequired()
                        .HasColumnName("Created_User")
                        .HasMaxLength(10);

                    b.Property<string>("Email")
                        .HasMaxLength(50);

                    b.Property<string>("FirstName")
                        .HasMaxLength(30);

                    b.Property<string>("LastName")
                        .HasMaxLength(30);

                    b.Property<DateTime>("ModifiedTime")
                        .HasColumnName("Modified_Time");

                    b.Property<string>("ModifiedUser")
                        .IsRequired()
                        .HasColumnName("Modified_User")
                        .HasMaxLength(10);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(100);

                    b.Property<string>("Status")
                        .HasMaxLength(1);

                    b.HasKey("Id");

                    b.ToTable("Identity_User");

                    b.HasData(
                        new { Id = "784fc512-e2c6-4217-a5eb-fcb977d3782e", Account = "admin", CreatedTime = new DateTime(2018, 8, 28, 17, 12, 26, 394, DateTimeKind.Local), CreatedUser = "DBO", ModifiedTime = new DateTime(2018, 8, 28, 17, 12, 26, 394, DateTimeKind.Local), ModifiedUser = "DBO", Name = "系統管理員", Password = "123456", PasswordHash = "AFvkjVazVBa0dxMw+/mO4kyWwHPa3tgyxDeyZFJiwgOn+ubt1iAegh/4QJWT5JIWZw==", Status = "A" },
                        new { Id = "c757a82e-58da-4e37-8080-c8789da00a9e", Account = "user", CreatedTime = new DateTime(2018, 8, 28, 17, 12, 26, 405, DateTimeKind.Local), CreatedUser = "DBO", ModifiedTime = new DateTime(2018, 8, 28, 17, 12, 26, 405, DateTimeKind.Local), ModifiedUser = "DBO", Name = "測試帳號", Password = "123456", PasswordHash = "AKauHrBMNdyXiyk/OU78pTo0iliWhwMU0CXWvtByQqvQaUzheGqB5SugFfKDdR7prQ==", Status = "A" }
                    );
                });

            modelBuilder.Entity("Dotnet.Models.Identity.UserRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRole");

                    b.HasData(
                        new { Id = "e9eec1d9-c823-41a0-8b8c-195f497a9d72", RoleId = "67db9b4c-ad92-405f-b42b-016712b20dd3", UserId = "784fc512-e2c6-4217-a5eb-fcb977d3782e" },
                        new { Id = "f3d5d57c-0582-4e3c-ba5f-54c7e277b56e", RoleId = "67db9b4c-ad92-405f-b42b-016712b20dd3", UserId = "c757a82e-58da-4e37-8080-c8789da00a9e" }
                    );
                });

            modelBuilder.Entity("Dotnet.Models.Identity.UserRole", b =>
                {
                    b.HasOne("Dotnet.Models.Identity.Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Dotnet.Models.Identity.User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
