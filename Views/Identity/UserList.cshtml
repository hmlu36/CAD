@{
    ViewBag.Title = "使用者管理";
}

<div class="container">
    <br /><h4>使用者管理</h4><br />
    <section class="well">
        <div class="form-group row">
            <label class="control-label col-lg-1">帳號</label>
            <div class="col-lg-2">
                <input class="form-control" v-model="model.Account" />
            </div>
            <label class="control-label col-lg-1">姓名</label>
            <div class="col-lg-2">
                <input class="form-control" v-model="model.Name" />
            </div>
        </div>
        <div class="form-group row">
            <label class="control-label col-lg-1">狀態</label>
            <div class="col-lg-2">
                <v-select v-model="model.Status" :options="statuses" :blank="true" />
            </div>
            <div class="col-lg-offset-6">
                <button type="button" class="btn btn-primary" v-on:click="getData();">查詢</button>
            </div>
        </div>
    </section>

    <input type="button" class="btn btn-warning" value="新增使用者" onclick="location.href='/Identity/UserCreate'" />
    <div>
        <datatable :columns="columns" :data="rows"></datatable>
        <datatable-pager v-model="page" type="abbreviated" class="d-flex justify-content-center"></datatable-pager>
    </div>
</div>
<script src="~/js/backendBundle.js"></script>

<script type="text/javascript">
    
    @await Component.InvokeAsync("EnumsToJavaScript")

    var vm =
        new Vue({
            el: '.container',
            data: {
                columns: [
                    {
                        label: "操作", interpolate: true, align: "center", sortable: false,
                        representedAs: function (row) {
                            return editDeleteButton("/Identity/UserEdit/", "/Identity/UserDelete/", row.Id);
                        }
                    },
                    { label: "帳號", field: "Account", align: "center", sortable: false },
                    { label: "名稱", field: "Name", align: "center", sortable: false },
                    {
                        label: "狀態", field: "Status", align: "center", representedAs: function (row) {
                            return (row.Status == 'A') ? "在職" : "離職/停職";
                        }
                    }
                ],
                rows: [],
                model: {},
                page: 1,
                statuses: Status
            },
            methods: {
                getData() {
                    blockUI();
                    sessionStorage.setItem("userModel", JSON.stringify(this.model));
                    axios.get('/Identity/UserGrid', {
                        params: this.model
                    })
                    .then(response => {
                        //alert(JSON.stringify(response.data));
                        this.rows = response.data;
                        $.unblockUI();
                    });
                }
            },
            mounted: function () {
                window.addEventListener('keypress', function (event) {
                    if (event.key == "Enter") {
                        vm.getData();
                    }
                });
            },
            created() {
                var sessionModel = sessionStorage.getItem("userModel");
                if (sessionModel != null) {
                    this.model = JSON.parse(sessionStorage.getItem("userModel"));
                }

                this.getData();
            }
        });
</script>
