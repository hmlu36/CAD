@{
    ViewBag.Title = "新增輪播圖";
}

<div class="container">
    <br /><h4>新增輪播圖</h4>
    <!-- 畫面驗證訊息 -->
    <div class='validation-summary-errors'><ul /></div>

    <div class="form-group row">
        <label class="col-lg-2 text-right">說明</label>
        <div class="col-lg-4">
            <textarea class="form-control" v-model="model.Description" rows="3" cols="10"></textarea>
        </div>
    </div>

    <div class="form-group row">
        <label class="col-lg-2 text-right">顯示</label>
        <div class="col-lg-2">
            <v-select v-model="model.Status" :options="yesNo" :blank="true" />
        </div>
    </div>

    <div class="form-group row">
        <label class="col-lg-2 text-right"><span style="color: red">＊</span>圖片</label>
        <div class="col-lg-4">
            <input type="file" class="filestyle" v-on:change="fileChange($event)" v-bind:data-placeholder="model.Path" /><br />
            <img v-bind:src="'/images/Carousel/' + model.Path" v-if="!previewImage && !!model.Path" class="w-100" />
            <span v-show="!!previewImage">
                <img v-bind:src="previewImage" class="w-100" />
            </span>
        </div>
    </div>

    <div class="text-center">
        <input type="button" class="btn btn-primary" value="儲存" v-on:click="save" />
        <input type="button" class="btn btn-warning" value="上一頁" v-on:click="previousPage" />
    </div>
</div>

<script src="~/js/backendBundle.js"></script>


<script type="text/javascript">

    @await Component.InvokeAsync("EnumsToJavaScript")
var vm =
    new Vue({
        el: '.container',
        data: {
            model: {},
            errors: [],
            yesNo: YesNo,
            formdata: new FormData(),
            previewImage: ''
        },
        methods: {
            fileChange: async function (e) {
                var files = e.target.files || e.dataTransfer.files;
                if (!files.length) {
                    return;
                }

                this.formdata.append(files[0].name, files[0]);
                await uploadFile(files[0]).then(function (file) {
                    vm.previewImage = file;
                    vm.model.Path = files[0].name;
                });
            },
            save() {
                //alert(JSON.stringify(this.model));
                ajaxUpload('/Product/CarouselCreate', this.model, '/Product/UploadImage/Carousel', this.formdata);
            }
        }
    })

</script>